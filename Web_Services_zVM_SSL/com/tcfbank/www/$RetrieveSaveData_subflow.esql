BROKER SCHEMA com.tcfbank.www


CREATE COMPUTE MODULE RetrieveSaveData_subflow_Build_Timeout
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();

		SET OutputRoot.Properties.CodedCharSetId 	= Environment.Variables.CCSID;
		SET OutputRoot.Properties.Encoding			= Environment.Variables.Encoding;
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = CAST(Environment.Variables.HTTP.RequestIdentifier AS BLOB);		
	 
--    Determine return MessageType		
		DECLARE ServiceNameWithSchema CHARACTER MessageFlowLabel;
  --  remove "com.tcfbank.www." from ServiceNameWithSchema
	 	DECLARE myLength INT;
	 	SET myLength = LENGTH(ServiceNameWithSchema) - 16;
	 	DECLARE ServiceName CHARACTER;
	 	SET ServiceName = RIGHT(ServiceNameWithSchema, myLength);
  --  add "Response" to ServiceName to determine MessageType
        DECLARE MessageName CHARACTER;	 	
	 	SET MessageName = ServiceName || 'Response';

--    set output message information
		SET OutputRoot.Properties.MessageSet = 'Web_Services_Message_Setv1.1';
		SET OutputRoot.Properties.MessageType = MessageName;
		SET OutputRoot.Properties.MessageFormat = 'XML1';
		
--    build output message - status and enterprise header				
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:StatusDisposition = '2';
        SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:StatusCode = '9999';
        SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:StatusDetail.tns:StatusCode = '9999';
        SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:StatusDetail.tns:StatusSubCode = '9997';
--    Build StatusDescription from CICS Error Response
   		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:StatusDetail.tns:StatusDescription = 'CICS Timeout';	 
        SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:StatusDetail.tns:StatusSource = 'Broker';
        SET OutputRoot.XMLNSC.tns:{MessageName}.tns:Status.tns:Repeatable = TRUE;  
        
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:Identity.tns:Username = Environment.Variables.EnterpriseHeader.Identity.Username; 
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:Identity.tns:Password = NULL; 
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:Identity.tns:IdentitySource = Environment.Variables.EnterpriseHeader.Identity.IdentitySource;
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:Version.tns:MessageVersion = Environment.Variables.EnterpriseHeader.Version.MessageVersion;
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:Version.tns:MessageRevision = Environment.Variables.EnterpriseHeader.Version.MessageRevision;
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:Channel = Environment.Variables.EnterpriseHeader.Channel;
		SET OutputRoot.XMLNSC.tns:{MessageName}.tns:EnterpriseHeader.tns:MessageDateTime = Environment.Variables.EnterpriseHeader.MessageDateTime;           		
		 
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;



CREATE COMPUTE MODULE RetrieveSaveData_subflow_Set_HTTP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
--		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		SET OutputRoot.Properties.CodedCharSetId 	= Environment.Variables.CCSID;
		SET OutputRoot.Properties.Encoding			= Environment.Variables.Encoding;
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = CAST(Environment.Variables.HTTP.RequestIdentifier AS BLOB);				 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
