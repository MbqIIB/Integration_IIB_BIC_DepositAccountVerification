BROKER SCHEMA com.tcfbank.www

CREATE COMPUTE MODULE AccountBalanceLookupRequest_WMB7211Input
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN 
		 CALL CopyMessageHeaders();
		 
		 SET OutputRoot.Properties.MessageSet = 'CICS_Commarea_Message_Setv1.1';
		 SET OutputRoot.Properties.MessageType = 'WMB7211Input';
		 SET OutputRoot.Properties.MessageFormat = 'Binary1';	
		 
-- #### added for MQ interface	
		SET OutputRoot.HTTPInputHeader 				= NULL;	
		SET OutputRoot.Properties.CodedCharSetId 	= 500;
		SET OutputRoot.Properties.Encoding  		= 785;
		SET OutputRoot.Properties.ExpirationTime	= 100;
		CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
-- #### end add		 

		 SET Environment.Variables.EnterpriseHeader.Identity.Username	 	= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Identity.tns:Username;
		 SET Environment.Variables.EnterpriseHeader.Identity.Password 		= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Identity.tns:Password;
		 SET Environment.Variables.EnterpriseHeader.Identity.IdentitySource = InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Identity.tns:IdentitySource; 
		 SET Environment.Variables.EnterpriseHeader.Version.MessageVersion 	= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Version.tns:MessageVersion;
		 SET Environment.Variables.EnterpriseHeader.Version.MessageRevision = InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Version.tns:MessageRevision;
		 SET Environment.Variables.EnterpriseHeader.Channel 				= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Channel;
		 SET Environment.Variables.EnterpriseHeader.MessageDateTime 		= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:MessageDateTime;
		 
		 SET OutputRoot.MRM.wmb7211_input_header.Version.Version 				= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Version.tns:MessageVersion;
		 SET OutputRoot.MRM.wmb7211_input_header.Revision.Revision				= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Version.tns:MessageRevision;
		 SET OutputRoot.MRM.wmb7211_input_header.Channel.Channel 				= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:EnterpriseHeader.tns:Channel;
		 SET OutputRoot.MRM.wmb7211_input_header.CallingProgram.CallingProgram 	= 'BROKER';
		 SET OutputRoot.MRM.wmb7211_input_header.CallingService.CallingService	= 'ACCTBALLOOKUP';	
		 SET OutputRoot.MRM.wmb7211_output_return 		  				  VALUE = NULL;
		 
		 SET OutputRoot.MRM.wmb7211_input_area.wmb7211_account 	= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:AccountIdentifier.tns:AccountNumber;
		 SET OutputRoot.MRM.wmb7211_input_area.wmb7211_bank 		= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:AccountIdentifier.tns:BankNumber;
		 SET OutputRoot.MRM.wmb7211_input_area.wmb7211_appl 		= InputRoot.XMLNSC.tns:AccountBalanceLookupRequest.tns:AccountIdentifier.tns:Application;

		 SET OutputRoot.MRM.wmb7211_output_area			  VALUE = NULL;
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;

CREATE COMPUTE MODULE WMB7211Output_AccountBalanceLookupResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN 
		 CALL CopyMessageHeaders();
		 
-- ADDED for MQ interface
		SET OutputRoot.Properties.CodedCharSetId 	= Environment.Variables.CCSID;
		SET OutputRoot.Properties.Encoding			= Environment.Variables.Encoding;
		
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = CAST(Environment.Variables.HTTP.RequestIdentifier AS BLOB);		
-- End add
		 
		 SET OutputRoot.Properties.MessageSet = 'Web_Services_Message_Setv1.1';
		 SET OutputRoot.Properties.MessageType = 'AccountBalanceLookupResponse';
		 SET OutputRoot.Properties.MessageFormat = 'XML1';
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:StatusDisposition = InputRoot.MRM.wmb7211_output_return.StatusDisposition.StatusDisposition;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:StatusCode = InputRoot.MRM.wmb7211_output_return.StatusCode.StatusCode;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:StatusDetail.tns:StatusCode = InputRoot.MRM.wmb7211_output_return.StatusCode.StatusCode;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:StatusDetail.tns:StatusSubCode = InputRoot.MRM.wmb7211_output_return.StatusSubCode;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:StatusDetail.tns:StatusDescription = InputRoot.MRM.wmb7211_output_return.StatusDesc;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:StatusDetail.tns:StatusSource = InputRoot.MRM.wmb7211_output_return.StatusSource;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:Status.tns:Repeatable = TRUE;
		 
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:Identity.tns:Username = Environment.Variables.EnterpriseHeader.Identity.Username;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:Identity.tns:Password = NULL;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:Identity.tns:IdentitySource = Environment.Variables.EnterpriseHeader.Identity.IdentitySource;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:Version.tns:MessageVersion = Environment.Variables.EnterpriseHeader.Version.MessageVersion;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:Version.tns:MessageRevision = Environment.Variables.EnterpriseHeader.Version.MessageRevision;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:Channel = Environment.Variables.EnterpriseHeader.Channel;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:EnterpriseHeader.tns:MessageDateTime = Environment.Variables.EnterpriseHeader.MessageDateTime;
		
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountIdentifier.tns:AccountNumber = InputRoot.MRM.wmb7211_input_area.wmb7211_account;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountIdentifier.tns:BankNumber = InputRoot.MRM.wmb7211_input_area.wmb7211_bank;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountIdentifier.tns:Application = InputRoot.MRM.wmb7211_input_area.wmb7211_appl;		 
		IF InputRoot.MRM.wmb7211_output_return.StatusDisposition.StatusDisposition = '0' THEN
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:SubApplication = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_category;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountType.tns:AccountTypeValue = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_type;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountType.tns:AccountTypeName = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_desc;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:BranchNumber = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_branch;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountRetentionStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_nsf_flag, '');
		 DECLARE I INTEGER 1;
		 WHILE (I < 6) DO
		 	IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_holds[I].wmb7211_hold_amt IS NOT NULL AND
			   InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_holds[I].wmb7211_hold_status IS NOT NULL THEN		 		
			    IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_holds[I].wmb7211_hold_amt IS NOT NULL THEN
			     SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:HardDollarMoneyHold[I].tns:HardDollarMoneyHoldAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_holds[I].wmb7211_hold_amt;
			    END IF;
		    	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:HardDollarMoneyHold[I].tns:HardDollarMoneyHoldCode = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_holds[I].wmb7211_hold_status, '');
		 	END IF;
		    SET I = I + 1;
		 END WHILE;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CautionFlag = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_caution_flag, '');
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:StatementDisposition = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_address_flag, '');
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CloseToPostingStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_close_to_post, '');
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:DormantStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_dormant_inactive, '');
		 IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_collection_date IS NOT NULL THEN 
			 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CollectionLetter.tns:CollectionLetterStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_collection_status, '');
		     SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CollectionLetter.tns:CollectionLetterDate = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_collection_date;
		 END IF;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:ClosedPendingReason = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_closed_reason, '');
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:OverdraftOptInStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_opt_out, '');
		 
		 
 
		 IF NOT InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_category = 'ODP' THEN
		 	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:CurrentBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_tel7202_return.wmb7211_curbal;
		 END IF;
		 IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_ledger_bal IS NOT NULL THEN
		 	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:LedgerBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_ledger_bal;
		 END IF;
		 IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_category = 'COM' THEN
		 	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:AvailableBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_tel7202_return.wmb7211_availbal;
		 	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:CollectedBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_tel7202_return.wmb7211_colbal;
		 END IF;
		 IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_tda_maturity_date IS NOT NULL THEN
		 	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:CertificateInformation.tns:MaturityDate = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_tda_maturity_date;
		 END IF;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:OpenDate = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_open_date;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:AccountInformation.tns:VIPStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_vip_flag, '');		 
		 
		 
		 
		 IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_category = 'PCP' or InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_category = 'ODP' THEN
			 IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_prod_category = 'PCP' THEN
			 	IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_pcp_ledger_bal IS NOT NULL THEN
				 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:CreditLineBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_pcp_ledger_bal;
				END IF;
				IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_pcp_next_pmt_amt IS NOT NULL AND
				   InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_pcp_next_pmt_date IS NOT NULL THEN
				   	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:NextPayment.tns:PaymentAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_pcp_next_pmt_amt;
				   	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:NextPayment.tns:PaymentDate = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_pcp_next_pmt_date;				   	
				END IF;
			 ELSE 
			 	IF InputRoot.MRM.wmb7211_output_area.wmb7211_tel7202_return.wmb7211_paybal IS NOT NULL THEN
			 		SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:CreditLineBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_tel7202_return.wmb7211_paybal;
			 	END IF;
				IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_next_pmt_amt IS NOT NULL AND
				   InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_next_pmt_date IS NOT NULL THEN
				   	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:NextPayment.tns:PaymentAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_next_pmt_amt;
				   	SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:NextPayment.tns:PaymentDate = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_next_pmt_date;				   	
				END IF;
				SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:OverdraftProtectionInformation.tns:AvailableCreditLineBalance.tns:BalanceAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_available;
				IF InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_last_pmt_amt IS NOT NULL AND
				   InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_last_pmt_date IS NOT NULL THEN					
					 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:OverdraftProtectionInformation.tns:LastPayment.tns:PaymentAmount = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_last_pmt_amt;
					 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:OverdraftProtectionInformation.tns:LastPayment.tns:PaymentDate = InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_last_pmt_date;
				END IF;
				SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:CreditAccountInformation.tns:OverdraftProtectionInformation.tns:OverdraftProtectionBlockedCode = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_odp_blocked, '');
			 END IF;	
		 END IF;
		 SET OutputRoot.XMLNSC.tns:AccountBalanceLookupResponse.tns:AccountBalanceLookupOutput.tns:RestrictiveProcessingStatus = NULLIF(InputRoot.MRM.wmb7211_output_area.wmb7211_dep7206_return.wmb7211_restrictive_proc, '');
		END IF;
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
